<ossec_config>
  <localfile>
    <log_format>full_command</log_format>
    <alias>process list</alias>
    <command>ps -e -o pid,uname,command</command>
    <frequency>30</frequency>
  </localfile>
</ossec_config>

<ossec_config>
  <!-- Your existing client, client_buffer, rootcheck, etc. configurations here -->
  
  <!-- Docker listener configuration -->
  <wodle name="docker-listener">
    <disabled>no</disabled>
    <interval>1m</interval>
    <attempts>5</attempts>
    <run_on_start>yes</run_on_start>
  </wodle>

  <!-- Docker logs monitoring -->
  <localfile>
    <log_format>json</log_format>
    <location>/var/lib/docker/containers/*/*.log</location>
  </localfile>

  <!-- Your remaining configurations -->
</ossec_config>

<ossec_config>
  <client>
    <server>
      <address>{{ wazuh_manager_ip }}</address>
      <port>1514</port>
      <protocol>tcp</protocol>
    </server>
    <config-profile>ubuntu, ubuntu24, ubuntu24.04</config-profile>
    <notify_time>10</notify_time>
    <time-reconnect>60</time-reconnect>
    <auto_restart>yes</auto_restart>
    <crypto_method>aes</crypto_method>
   <!-- <auto_negotiate>yes</auto_negotiate>  commanted for automatic SSL/TLS negotiation -->

    <enrollment>
      <enabled>yes</enabled>
      <agent_name>{{ ansible_hostname }}</agent_name>
      <groups>{{ wazuh_group }}</groups> <!-- Corrected typo: wazhu_group to wazuh_group -->
      <authorization_pass_path>/var/ossec/etc/authd.pass</authorization_pass_path>

    <!-- authorization_pass_path removed: Agent will auto-register without a shared password file
      <authorization_pass_path>etc/authd.pass</authorization_pass_path>
    -->

    </enrollment>

<!-- 
    <api>
      <port>55000</port>
      <bind_addr>0.0.0.0</bind_addr>
      <cors allowed_origins="*" allow_credentials="no"></cors>
    </api>
    -->
  </client>

  <client_buffer>
    <!-- Agent buffer options -->
    <disabled>no</disabled>
    <queue_size>5000</queue_size>
    <events_per_second>500</events_per_second>
  </client_buffer>

  <!-- Policy monitoring -->
  <rootcheck>
    <disabled>no</disabled>
    <check_files>yes</check_files>
    <check_trojans>yes</check_trojans>
    <check_dev>yes</check_dev>
    <check_sys>yes</check_sys>
    <check_pids>yes</check_pids>
    <check_ports>yes</check_ports>
    <check_if>yes</check_if>

    <!-- Frequency that rootcheck is executed - every 30 minutes -->
    <frequency>1800</frequency>

    <rootkit_files>etc/shared/rootkit_files.txt</rootkit_files>
    <rootkit_trojans>etc/shared/rootkit_trojans.txt</rootkit_trojans>

    <skip_nfs>yes</skip_nfs>

    <ignore>/var/lib/containerd</ignore>
    <ignore>/var/lib/docker/overlay2</ignore>
  </rootcheck>

  <wodle name="cis-cat">
    <disabled>yes</disabled>
    <timeout>1800</timeout>
    <interval>1d</interval>
    <scan-on-start>yes</scan-on-start>

    <java_path>wodles/java</java_path>
    <ciscat_path>wodles/ciscat</ciscat_path>
  </wodle>

  <!-- Osquery integration -->
  <wodle name="osquery">
    <disabled>yes</disabled>
    <run_daemon>yes</run_daemon>
    <log_path>/var/log/osquery/osqueryd.results.log</log_path>
    <config_path>/etc/osquery/osquery.conf</config_path>
    <add_labels>yes</add_labels>
  </wodle>

  <!-- System inventory -->
  <wodle name="syscollector">
    <disabled>no</disabled>
    <interval>1h</interval>
    <scan_on_start>yes</scan_on_start>
    <hardware>yes</hardware>
    <os>yes</os>
    <network>yes</network>
    <packages>yes</packages>
    <ports all="no">yes</ports>
    <processes>yes</processes>

    <!-- Database synchronization settings -->
    <synchronization>
      <max_eps>10</max_eps>
    </synchronization>
  </wodle>

  <sca>
    <enabled>yes</enabled>
    <scan_on_start>yes</scan_on_start>
    <interval>12h</interval>
    <skip_nfs>yes</skip_nfs>
  </sca>

  <!-- File integrity monitoring, update from 12hr to 15 minutes update -->
  <syscheck>
    <disabled>no</disabled>
    <!-- Frequency that syscheck is executed default every 15 minutes -->
    <frequency>900</frequency>

    <scan_on_start>yes</scan_on_start>

    <!-- Directories to check  perform all possible verifications update realtime check -->
    <directories check_all="yes" realtime="yes">/etc,/usr/bin,/usr/sbin,/bin,/sbin</directories>
    <directories check_all="yes" report_changes="yes" realtime="yes">/root</directories>
    <directories check_all="yes" report_changes="yes" realtime="yes">/var/ossec/etc/ossec.conf</directories>

    <!-- Home directories monitor changes but not all files -->
    <directories check_all="no" report_changes="yes" realtime="yes">/home</directories>

    <!-- Directories to monitor specific files -->
    <directories check_all="no">/root/.ssh/authorized_keys</directories> 

    <!-- SSH configuration monitoring -->
    <directories check_all="yes" report_changes="yes" realtime="yes">/root/.ssh</directories>
    <directories check_all="yes" report_changes="yes" realtime="yes">/home/*/.ssh</directories>


    <!-- For APT package management 
    <directories check_all="no" report_changes="yes">/var/lib/apt,/var/lib/dpkg</directories>

    <!-- For snap packages 
    <directories check_all="no" report_changes="yes">/var/lib/snapd</directories> -->

    <!-- Systemd unit files -->
    <directories check_all="no" report_changes="yes">/etc/systemd/system</directories>

   <!-- More precise than checking all of /root -->
   <directories check_all="no" report_changes="yes" realtime="yes">/root/.bashrc,/root/.profile,/root/.ssh</directories>

   <!-- Add these to your monitored specific files -->
   <directories check_all="yes" report_changes="yes" realtime="yes">/etc/sudoers,/etc/passwd</directories>
   <directories check_all="yes" report_changes="yes" realtime="yes">/etc/passwd</directories>
   <directories check_all="yes" report_changes="yes" realtime="yes">/etc/shadow</directories>

    <!-- Check attributes -->
    <check_perm>yes</check_perm>
    <check_owner>yes</check_owner>
    <check_group>yes</check_group> 
    <check_sum>yes</check_sum>
    <check_size>yes</check_size>
    <check_sha1sum>yes</check_sha1sum>  

    <!-- Alert when file attributes change -->
    <alert_new_files>yes</alert_new_files>

    <!-- Files/directories to ignore -->
    <ignore>/home/*/.*</ignore>
    <ignore>/root/.lesshst</ignore>
    <ignore>/root/.viminfo</ignore>
    <ignore>/etc/mtab</ignore>
    <ignore>/etc/hosts.deny</ignore>
    <ignore>/etc/mail/statistics</ignore>
    <ignore>/etc/random-seed</ignore>
    <ignore>/etc/random.seed</ignore>
    <ignore>/etc/adjtime</ignore>
    <ignore>/etc/httpd/logs</ignore>
    <ignore>/etc/utmpx</ignore>
    <ignore>/etc/wtmpx</ignore>
    <ignore>/etc/cups/certs</ignore>
    <ignore>/etc/dumpdates</ignore>
    <ignore>/etc/svc/volatile</ignore>

    <!-- File types to ignore -->
    <ignore type="sregex">.log$|.swp$</ignore>

    <!-- Check the file, but never compute the diff -->
    <nodiff>/etc/ssl/private.key</nodiff>

    <skip_nfs>yes</skip_nfs>
    <skip_dev>yes</skip_dev>
    <skip_proc>yes</skip_proc>
    <skip_sys>yes</skip_sys>

    <!-- Nice value for Syscheck process -->
    <process_priority>10</process_priority>

    <!-- Maximum output throughput -->
    <max_eps>50</max_eps>

    <!-- Database synchronization settings -->
    <synchronization>
      <enabled>yes</enabled>
      <interval>5m</interval>
      <max_eps>10</max_eps>
    </synchronization>
  </syscheck>

  <!-- Log analysis -->
  <localfile>
    <log_format>command</log_format>
    <command>df -P</command>
    <frequency>360</frequency>
  </localfile>

  <localfile>
    <log_format>full_command</log_format>
    <command>netstat -tulpn | sed 's/\([[:alnum:]]\+\)\ \+[[:digit:]]\+\ \+[[:digit:]]\+\ \+\(.*\):\([[:digit:]]*\)\ \+\([0-9\.\:\*]\+\).\+\ \([[:digit:]]*\/[[:alnum:]\-]*\).*/\1 \2 == \3 == \4 \5/' | sort -k 4 -g | sed 's/ == \(.*\) ==/:\1/' | sed 1,2d</command>
    <alias>netstat listening ports</alias>
    <frequency>360</frequency>
  </localfile>

  <localfile>
    <log_format>full_command</log_format>
    <command>last -n 20</command>
    <frequency>360</frequency>
  </localfile>

  <!-- Update, ssh login failures -->
  <localfile>
  <log_format>syslog</log_format>
  <location>/var/log/auth.log</location> <!-- Use /var/log/secure if RHEL-based -->
  </localfile>

  <!-- Active response -->
  <active-response>
    <disabled>no</disabled>
    <ca_store>etc/wpk_root.pem</ca_store>
    <ca_verification>yes</ca_verification>
  </active-response>

  <!-- Choose between "plain", "json", or "plain,json" for the format of internal logs -->
  <logging>
    <log_format>plain</log_format>
  </logging>

</ossec_config>

<ossec_config>
  <localfile>
    <log_format>journald</log_format>
    <location>journald</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/ossec/logs/active-responses.log</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/dpkg.log</location>
  </localfile>

</ossec_config>

<ossec_config>
  <!-- Suricata Integration -->
  <localfile>
    <log_format>json</log_format>
    <location>/var/log/suricata/eve.json</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/suricata/suricata.log</location>
  </localfile>

  <localfile>
    <log_format>command</log_format>
    <command>suricatasc -c "dump-counters" | jq '.' 2>/dev/null || echo '{"error": "suricatasc not available"}'</command>
    <alias>suricata-stats</alias>
    <frequency>300</frequency>
  </localfile>
</ossec_config>
